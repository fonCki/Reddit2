@page "/ShowPost/{postId}"
@using Application.Contracts
@using Entities.Model
@using Microsoft.AspNetCore.Components
@using System.Security.Claims
@inject IPostDAO postDao
<h3>ShowPost</h3>
@* *@
@* <AuthorizeView> *@
@*     <Authorized> *@
        <RadzenCard class="m-3">
            <div class="row">
                <div class="title">
                    
                    @* <RadzenTextBox Placeholder="Title"@bind-Value=@Post.Header MaxLength="300" Class="w-100"/> *@
                    <H2>@Post.Header</h2>
                </div>
                <div  class="col-6 body col">
                    <RadzenHtmlEditor PlaceHolder="Text (optional)" @bind-Value=@Post.Body style="height: 500px; margin-bottom: 1rem;" Disabled="true" class="rz-html-editor">
                        <RadzenHtmlEditorRemoveFormat />
                    </RadzenHtmlEditor>
                </div>
                <div class="col-6  col">
                    @if (Post.Image != null) {
                        <div class="photo-area" >
                            <img src=@Post.Image >
                            @* <div> *@
                            @*     <RadzenCard> *@
                            @*         $1$ <h4 class="mb-4">Upload your photo</h4> #1# *@
                            @*         <RadzenFileInput @bind-Value=@Post.Image TValue="string" Class="w-100"/> *@
                            @*     </RadzenCard> *@
                            @* </div>     *@
                            @* <div class="submit"> *@
                            @*     <RadzenButton ButtonType="ButtonType.Submit" Text="Submit"/> *@
                            @* </div> *@
                        </div>
                    }
                    <div class="comments-full col" style="@((Post.Image == null) ? "height: 100%" : "height: 50%")">
                        <div class="comments-part ">
                            <CommentComponent Comment="acooment"></CommentComponent>
                            <CommentComponent Comment="acooment"></CommentComponent>
                            
                        </div>
                        <div>
                             <RadzenTextArea Style="resize: none;" Placeholder="Enter your comment..." MaxLength="144" Change=@(args => OnChange(args, "TextArea with placeholder")) Class="w-100"/>
                        </div>
                    </div>
                </div>
            </div>
      </RadzenCard>  
@*     </Authorized> *@
@*     <NotAuthorized> *@
@*         <p>You must be logged in to post</p> *@
@*     </NotAuthorized> *@
@* </AuthorizeView> *@


@code {
    public Post Post;
    [Parameter]
    public string postId { get; set; }

    public Comment acooment;



    private void OnChange(string args, string textareaWithPlaceholder) {
        throw new NotImplementedException();
    }
    
    
    protected override async Task OnInitializedAsync() {




        User myUser = new User("Hugo", "Brogilio", "Hugo@gmail.com", "hugo123", null);

            Post = await postDao.GetPost(postId);
        acooment = new Comment(" Description.", myUser);
    }

}